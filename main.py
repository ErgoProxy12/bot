import telebot
from telebot import types
from datetime import datetime
import pickle

# –ó–∞–º–µ–Ω–∏—Ç–µ 'YOUR_BOT_TOKEN' –Ω–∞ —Ç–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ –±–æ—Ç–∞
bot = telebot.TeleBot('6819371147:AAF2nHhkshkODKPg8ui15oj_tjrC0exDnYs')

# –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ñ–∞–π–ª–∞
try:
    with open('user_data.pkl', 'rb') as file:
        user_data = pickle.load(file)
except FileNotFoundError:
    user_data = {}

# –§—É–Ω–∫—Ü–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –º–µ–Ω—é —Å –¥–µ–π—Å—Ç–≤–∏—è–º–∏
def show_actions_menu(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    actions = ["–ü—Ä–∏—à–µ–ª –Ω–∞ —Ä–∞–±–æ—Ç—É", "–£—à–µ–ª —Å —Ä–∞–±–æ—Ç—ã", "–ü–æ—à–µ–ª –Ω–∞ –ø–µ—Ä–µ–∫—É—Ä", "–í–µ—Ä–Ω—É–ª—Å—è —Å –ø–µ—Ä–µ–∫—É—Ä–∞"]
    markup.add(*[types.KeyboardButton(action) for action in actions])

    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=markup)

# –§—É–Ω–∫—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def save_user_data(user_id, username, last_action):
    user_data[user_id] = {'username': username, 'last_action': last_action}

    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ —Ñ–∞–π–ª
    with open('user_data.pkl', 'wb') as file:
        pickle.dump(user_data, file)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
@bot.message_handler(commands=['start'])
def start(message):
    user_id = message.from_user.id

    if user_id in user_data:
        bot.send_message(message.chat.id, f"–ü—Ä–∏–≤–µ—Ç! –¢—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω(–∞) –∫–∞–∫ {user_data[user_id]['username']}.")
        show_actions_menu(message)
    else:
        # –ï—Å–ª–∏ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –ø—Ä–æ—Ñ–∏–ª—è –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–æ, –∏—Å–ø–æ–ª—å–∑—É–µ–º '–ù–µ—Ç –∏–º–µ–Ω–∏'
        username = f"@{message.from_user.username}" if message.from_user.username else "–ù–µ—Ç –∏–º–µ–Ω–∏"
        save_user_data(user_id, username, None)
        bot.send_message(message.chat.id, f"–ü—Ä–∏–≤–µ—Ç! –¢–µ–ø–µ—Ä—å —Ç—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω(–∞) –∫–∞–∫ {username}.")
        show_actions_menu(message)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –¥–µ–π—Å—Ç–≤–∏—è –≤ –ª–∏—á–Ω–æ–º —á–∞—Ç–µ
@bot.message_handler(func=lambda message: message.text in ["–ü—Ä–∏—à–µ–ª –Ω–∞ —Ä–∞–±–æ—Ç—É", "–£—à–µ–ª —Å —Ä–∞–±–æ—Ç—ã", "–ü–æ—à–µ–ª –Ω–∞ –ø–µ—Ä–µ–∫—É—Ä", "–í–µ—Ä–Ω—É–ª—Å—è —Å –ø–µ—Ä–µ–∫—É—Ä–∞"])
def handle_action(message):
    user_id = message.from_user.id

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    if user_id in user_data:
        last_action = message.text

        # –ü–æ–ª—É—á–∞–µ–º –≤—Ä–µ–º—è —Å–æ–æ–±—â–µ–Ω–∏—è –≤ UTC –∏ –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ —Ñ–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏ –¢–µ–ª–µ–≥—Ä–∞–º–∞
        message_time_utc = datetime.utcfromtimestamp(message.date).strftime('%Y-%m-%d %H:%M:%S')

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –∫–∞–Ω–∞–ª (–∑–∞–º–µ–Ω–∏—Ç–µ 'YOUR_CHANNEL_NAME' –Ω–∞ –∏–º—è –≤–∞—à–µ–≥–æ –∫–∞–Ω–∞–ª–∞)
        current_time = datetime.now().strftime('%Y-%m-%d %H:%M:%S')
        message_text = f"–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {user_data[user_id]['username']}\n–î–µ–π—Å—Ç–≤–∏–µ: {last_action}\n–í—Ä–µ–º—è: {current_time}"
        bot.send_message(chat_id='@kto_gde_i_kogda', text=message_text, parse_mode='Markdown')

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        bot.send_message(message.chat.id, "–°–ø–∞—Å–∏–±–æ! –®—Ç—Ä–∞—Ñ–∞ –Ω–µ –±—É–¥–µ—Ç üòÑ")
    else:
        bot.send_message(message.chat.id, "–¢—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω. –ù–∞–ø–∏—à–∏ /start –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.")

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == "__main__":
    while True:
        try:
            bot.polling(none_stop=True)
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞: {e}")
